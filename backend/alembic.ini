# ===============================================
# üöÄ Alembic Configuration for SmartBiz Assistance
# Supports PostgreSQL + .env via env.py
# ===============================================

[alembic]
# Migration script location
script_location = backend/alembic

# Template for revision filenames (optional: timestamped format)
# file_template = %%(year)d_%%(month).2d_%%(day).2d_%%(rev)s_%%(slug)s

# Add project root to Python path
prepend_sys_path = .

# Allow nested folders with `versions/` (if needed)
version_path_separator = os
# recursive_version_locations = true

# Encoding for migration scripts
output_encoding = utf-8

# NOTE:
# üîê Do NOT set `sqlalchemy.url` here.
# Load dynamically via env.py from .env instead for flexibility and security.
sqlalchemy.url =

# ===============================================
# üé® Post-Write Hooks (Auto-formatters)
# ===============================================
[post_write_hooks]
# Format migration scripts with black
hooks = black
black.type = console_scripts
black.entrypoint = black
black.options = -l 100 REVISION_SCRIPT_FILENAME

# Optional linter (disabled by default)
# hooks = ruff
# ruff.type = exec
# ruff.executable = .venv/Scripts/ruff
# ruff.options = check --fix REVISION_SCRIPT_FILENAME

# ===============================================
# üìä Logging Configuration
# ===============================================
[loggers]
keys = root, sqlalchemy, alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARNING
handlers = console
qualname =

[logger_sqlalchemy]
level = WARNING
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
