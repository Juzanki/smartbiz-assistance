# === Alembic Configuration for SmartBiz Assistance ===
# Supports PostgreSQL, modular structure, and modern formatting

[alembic]
# Path to migration scripts
script_location = backend/alembic

# Template used for naming revisions (Optional: include timestamp if needed)
# file_template = %%(year)d_%%(month).2d_%%(day).2d_%%(hour).2d%%(minute).2d-%%(rev)s_%%(slug)s

# Add base directory to sys.path
prepend_sys_path = .

# Use system-native path separator for multiple version folders (optional)
version_path_separator = os

# Uncomment to support migrations across folders recursively
# recursive_version_locations = true

# Output encoding for migration scripts
output_encoding = utf-8

# === SQLAlchemy Database URL ===
# For security & flexibility, load via env.py from .env file â€” this value is overridden
sqlalchemy.url = postgresql+psycopg2://postgres:SmartBiz2025@localhost:5432/smartbiz_db


# === Post-Write Hooks (Optional Auto Formatter & Linter) ===
[post_write_hooks]
# Automatically format migrations with black
hooks = black
black.type = console_scripts
black.entrypoint = black
black.options = -l 100 REVISION_SCRIPT_FILENAME

# Optionally enable ruff for linting (commented by default)
# hooks = ruff
# ruff.type = exec
# ruff.executable = .venv/Scripts/ruff
# ruff.options = check --fix REVISION_SCRIPT_FILENAME


# === Logging Configuration ===
[loggers]
keys = root, sqlalchemy, alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARNING
handlers = console
qualname =

[logger_sqlalchemy]
level = WARNING
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
